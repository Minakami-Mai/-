//package Arraytests;
/*
*@author Lee
*看过不少二维数组回型排序，写的不知所云，CS小白特此献上自己的代码。！！！该代码仅适用于方阵，列元素和行元素不等时，需要做出相应变化。
*
*/
public class LoopTraversal {
	
	public static void number()  {
		int[][] a = new int[][]{
			{1,2,3,4},
			{12,13,14,5},
			{11,16,15,6},
			{10,9,8,7},
		};
		int row = a.length;
		int coloum = a[0].length;
		int Count = row*coloum;
		int count = 0;
		int n = 0;   //列标
		int m = 0;   //行标   
		
		for(int dia = 1; dia < coloum/2 +1; dia++) {
			m = dia - 1;  //dia表示对角线第几个元素，即回型遍历第几圈
			while(n < coloum - dia) {
				System.out.println(a[m][n]);
				n++;
				count++;
			}
			System.out.println(a[m][n]);
			while(m < row - dia) {
				m++;
				System.out.println(a[m][n]);
				count++;
			}
			while(n > dia - 1) {
				n--;
				System.out.println(a[m][n]);
				count++;
			}
			while(m > dia) {
				m--;  //m归为到这圈的dia值，为下一圈准备初始行标！
				System.out.println(a[m][n]);
				count++;
			}
			n++;   //为下一圈遍历初始化列标
			count++;
		}
		if(count<Count){
			System.out.println(a[m][n]);
			count++;
		}
		
	}	
	
	public static void main(String[] args) {
		number();
		
		
	}
